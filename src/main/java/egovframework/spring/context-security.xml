<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<http auto-config="true" use-expressions="true">
		<session-management invalid-session-url="/">
			<!-- 동일 ID의 세션 최대 개수가 한개, 그 이상일 경우는 기존 세션 무효화 -->
			<concurrency-control max-sessions="1" error-if-maximum-exceeded="false" />
		</session-management>
		<!-- 권한에 따라 url 접속 제한 설정 -->
		<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
		<intercept-url pattern="/**" access="permitAll" />
		<csrf disabled="true" />
		<form-login 
			username-parameter="user_id"
			password-parameter="user_pw"
			login-processing-url="/login.do"
			login-page="/loginPage.do"
			default-target-url="/home.do"
			authentication-failure-url="/loginPage.do?error=true" />
		<remember-me key="remember-key"
			token-validity-seconds="604800"
			remember-me-parameter="remember-me-param" />
		<logout logout-url="/logout.do" logout-success-url="/loginPage.do"
			invalidate-session="true"
			delete-cookies="JSESSIONID,SPRING_SECURITY_REMEMBER_ME_COOKIE" />
			
		<access-denied-handler error-page="/accessDenied.do" />
	</http>

	<authentication-manager>
	    <authentication-provider>
	        <jdbc-user-service data-source-ref="dataSource"
	            users-by-username-query="
	                SELECT user_id AS user_id, user_pw AS user_pw, 1 AS enabled
	                FROM board.user_t
	                WHERE user_id = ?"
	            authorities-by-username-query="
	                SELECT u.user_id AS user_id, a.authrt_nm AS authrt_nm
	                FROM board.user_t u
	                JOIN board.authrt_t a ON u.authrt_cd = a.authrt_cd
	                WHERE u.user_id = ?" />
	        <password-encoder ref="bcryptPasswordEncoder" />
	    </authentication-provider>
	</authentication-manager>

	<beans:bean id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
		
</beans:beans>